# Set root logger level to DEBUG and its only appender to Console.
# (You can change DEBUG to WARN if you get tired of debug output...
# but you'll probably find it very helpful during the term...)
log4j.rootLogger=WARN, Console

# Console is set to be a ConsoleAppender.
log4j.appender.Console=org.apache.log4j.ConsoleAppender

# Console appender uses PatternLayout.
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%-4r [%t] %-5p %c{1} %x - %m%n

# Sets the overall logging level of NanoDB.  Change this to DEBUG
# if you want to see a lot of debug output from all over.
log4j.logger.edu.caltech.nanodb = WARN

# Enable or disable log output from different components of NanoDB.
# Change log levels to WARN to turn off most logging output from the
# corresponding component, or INFO or DEBUG to increase logging output.

# The SQL Abstract Syntax Tree (AST) can be overly verbose.
#log4j.logger.edu.caltech.nanodb.commands = DEBUG
#log4j.logger.edu.caltech.nanodb.commands.FromClause = INFO
#log4j.logger.edu.caltech.nanodb.commands.SelectClause = INFO

# Plan-nodes have some verbose debug output.  Turn it off.
#log4j.logger.edu.caltech.nanodb.plannodes = INFO

# For setting logging level of specific plan-nodes:
#log4j.logger.edu.caltech.nanodb.plannodes.ProjectNode = INFO

#log4j.logger.edu.caltech.nanodb.server.EventDispatcher = INFO

log4j.logger.edu.caltech.nanodb.indexes = INFO

# Storage layer gets extremely tedious after a while, but it's helpful
# when trying to debug storage bugs.
#log4j.logger.edu.caltech.nanodb.storage = WARN
#log4j.logger.edu.caltech.nanodb.storage.BufferManager = INFO
#log4j.logger.edu.caltech.nanodb.storage.btreefile = INFO

